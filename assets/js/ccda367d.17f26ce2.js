"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[492],{4852:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(9231);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(n),k=o,u=d["".concat(l,".").concat(k)]||d[k]||m[k]||r;return n?a.createElement(u,i(i({ref:t},c),{},{components:n})):a.createElement(u,i({ref:t},c))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1532:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var a=n(8041),o=(n(9231),n(4852));const r={hide_title:!0},i=void 0,p={unversionedId:"komondor",id:"komondor",title:"komondor",description:"komondor",source:"@site/docs/komondor.md",sourceDirName:".",slug:"/komondor",permalink:"/website/komondor",draft:!1,editUrl:"https://github.com/mocktomata/website/blob/main/docs/komondor.md",tags:[],version:"current",frontMatter:{hide_title:!0},sidebar:"mocktomata",previous:{title:"mockto",permalink:"/website/mockto"},next:{title:"zucchini",permalink:"/website/zucchini"}},l={},s=[{value:"<code>komondor</code>",id:"komondor",level:2},{value:"Tips and Tricks",id:"tips-and-tricks",level:2},{value:"Recorded Demo",id:"recorded-demo",level:3},{value:"Live Debug Recording",id:"live-debug-recording",level:3},{value:"Architecture Consideration",id:"architecture-consideration",level:2},{value:"Clean Architecture",id:"clean-architecture",level:3},{value:"Dependency Injection",id:"dependency-injection",level:4}],c={toc:s};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"komondor"},(0,o.kt)("inlineCode",{parentName:"h2"},"komondor")),(0,o.kt)("p",null,"Hi, This is ",(0,o.kt)("a",{parentName:"p",href:"/website/komondor"},(0,o.kt)("inlineCode",{parentName:"a"},"komondor")),"."),(0,o.kt)("p",null,"I used to be a guard dog. ",(0,o.kt)("img",{src:"/website/img/komondor.jpg",alt:"komondor",width:"20"})),(0,o.kt)("p",null,"But nowadays, I'm one of the four mocktomata in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mocktomata/mocktomata/blob/master/packages/mocktomata"},"mocktomata")," family."),(0,o.kt)("p",null,"If you find my name is too long, you can also call me ",(0,o.kt)("inlineCode",{parentName:"p"},"kd"),"."),(0,o.kt)("p",null,"While ",(0,o.kt)("a",{parentName:"p",href:"/website/mockto"},(0,o.kt)("inlineCode",{parentName:"a"},"mockto"))," specialized for testing,\nI'm more general purposed and versatile."),(0,o.kt)("p",null,"Here is how to write the same test from ",(0,o.kt)("a",{parentName:"p",href:"/website/"},"introduction"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import axios from 'axios'\nimport { komondor } from 'mocktomata'\n\ntest('get friends', async () => {\n  const spec = komondor('get friends')\n  const s = await spec(axios)\n\n  const friends = await getFriends(s, 'miku')\n  expect(friends.map(f => f.name)).toEqual(['luka', 'rumi', 'len', 'ren'])\n\n  await spec.done()\n})\n\nafterAll(komondor.cleanup)\n")),(0,o.kt)("p",null,"You can see ",(0,o.kt)("a",{parentName:"p",href:"/website/mockto"},(0,o.kt)("inlineCode",{parentName:"a"},"mockto"))," and me are pretty similar."),(0,o.kt)("p",null,"The main difference is that you call me within the test,\nand you have to repeat the ",(0,o.kt)("a",{parentName:"p",href:"/website/spec#uniqueness-of-specname"},(0,o.kt)("inlineCode",{parentName:"a"},"specName"))," (if it is the same as your test description,\nwhich is the case most of the time)."),(0,o.kt)("p",null,"All mocktomata provides similar functionalities."),(0,o.kt)("p",null,"Here are the things we share, for reference:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/website/spec#spec"},"Spec"),": specification of behavior we record and replay."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/website/spec#what-can-be-a-spec-subject"},"spec subject")," : the subject to record the behavior from (",(0,o.kt)("inlineCode",{parentName:"li"},"axios")," in the example)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/website/spec#specrecord"},(0,o.kt)("inlineCode",{parentName:"a"},"SpecRecord")),": The record we saved for a ",(0,o.kt)("a",{parentName:"li",href:"/website/spec#spec"},"Spec"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/website/spec#spec"},(0,o.kt)("inlineCode",{parentName:"a"},"spec()")),": the function to create a ",(0,o.kt)("a",{parentName:"li",href:"/website/spec#what-can-be-a-spec-subject"},"spec subject")," ."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/website/spec#reporter"},(0,o.kt)("inlineCode",{parentName:"a"},"reporter")),": a ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/unional/standard-log/blob/main/packages/log/ts/memory.ts#L7"},(0,o.kt)("inlineCode",{parentName:"a"},"MemoryLogReporter"))," from ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/unional/standard-log"},"standard-log"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/website/spec#specmode"},(0,o.kt)("inlineCode",{parentName:"a"},"mode")),": the ",(0,o.kt)("a",{parentName:"li",href:"/website/spec#specmode"},(0,o.kt)("inlineCode",{parentName:"a"},"SpecMode"))," the code is currently running in."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/website/spec#done"},(0,o.kt)("inlineCode",{parentName:"a"},"done()")),": the function to indicate the ",(0,o.kt)("a",{parentName:"li",href:"/website/spec#spec"},"Spec")," is done."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/website/spec#cleanup"},(0,o.kt)("inlineCode",{parentName:"a"},"cleanup()")),": a overall clean up function."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/website/spec#maskvalue"},(0,o.kt)("inlineCode",{parentName:"a"},"maskValue()")),": the function to mask sensitive value from logs and ",(0,o.kt)("a",{parentName:"li",href:"/website/spec#specrecord"},(0,o.kt)("inlineCode",{parentName:"a"},"SpecRecord")),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/website/spec#ignoremismatch"},(0,o.kt)("inlineCode",{parentName:"a"},"ignoreMismatch()")),": the function to tell us to ignore specific changes.")),(0,o.kt)("p",null,"My API look like this:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},"komondor(specName, specOptions?): spec"))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/website/spec#uniqueness-of-specname"},(0,o.kt)("inlineCode",{parentName:"a"},"specName"))," must be unique within one test file,\nand ",(0,o.kt)("inlineCode",{parentName:"p"},"specOptions")," is a ",(0,o.kt)("a",{parentName:"p",href:"/website/spec#spec-options"},(0,o.kt)("inlineCode",{parentName:"a"},"Spec.Options")),"."),(0,o.kt)("p",null,"I returns a ",(0,o.kt)("a",{parentName:"p",href:"/website/spec#spec"},(0,o.kt)("inlineCode",{parentName:"a"},"spec()"))," function,\nwhich is also an object holding the other functions and properties:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/website/spec#reporter"},(0,o.kt)("inlineCode",{parentName:"a"},"spec.reporter"))," (note that this is different than ",(0,o.kt)("a",{parentName:"li",href:"/website/mockto"},(0,o.kt)("inlineCode",{parentName:"a"},"mockto")),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/website/spec#specmode"},(0,o.kt)("inlineCode",{parentName:"a"},"spec.mode"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/website/spec#done"},(0,o.kt)("inlineCode",{parentName:"a"},"spec.done()"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/website/spec#maskvalue"},(0,o.kt)("inlineCode",{parentName:"a"},"spec.maskValue()"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/website/spec#ignoremismatch"},(0,o.kt)("inlineCode",{parentName:"a"},"spec.ignoreMismatch()")))),(0,o.kt)("p",null,"I will run the ",(0,o.kt)("a",{parentName:"p",href:"/website/spec#spec"},"Spec")," in ",(0,o.kt)("a",{parentName:"p",href:"/website/spec#specmode"},"auto mode"),"."),(0,o.kt)("p",null,"This behavior can be changed through ",(0,o.kt)("a",{parentName:"p",href:"/website/configuration"},"configuration"),"."),(0,o.kt)("p",null,"There are 4 variants of this call:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},"komondor.live(...)"),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"komondor.save(...)"),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"komondor.simulate(...)"),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"komondor.mock(...)"))),(0,o.kt)("p",null,"They run the ",(0,o.kt)("a",{parentName:"p",href:"/website/spec#spec"},"Spec")," in those ",(0,o.kt)("a",{parentName:"p",href:"/website/spec#specmode"},"mode")," respectively.\nThe ",(0,o.kt)("a",{parentName:"p",href:"/website/configuration"},"configuration")," will not change the behavior if I am called this way."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},"mockto.cleanup()"))),(0,o.kt)("p",null,"This is the ",(0,o.kt)("a",{parentName:"p",href:"/website/spec#cleanup"},(0,o.kt)("inlineCode",{parentName:"a"},"cleanup()"))," function."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"alias as ",(0,o.kt)("inlineCode",{parentName:"p"},"kd"))),(0,o.kt)("p",null,"In my past live, people say my name is too long.\nSo this time, I have an alias ",(0,o.kt)("inlineCode",{parentName:"p"},"kd"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { kd } from 'mocktomata'\n\ntest('...', async () => {\n  const spec = kd(...)\n})\n")),(0,o.kt)("h2",{id:"tips-and-tricks"},"Tips and Tricks"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/website/komondor"},(0,o.kt)("inlineCode",{parentName:"a"},"komondor"))," shares the same tips and tricks as ",(0,o.kt)("a",{parentName:"p",href:"/website/mockto#tips-and-tricks"},(0,o.kt)("inlineCode",{parentName:"a"},"mockto")),"."),(0,o.kt)("p",null,"But it also has its own when it is used in production."),(0,o.kt)("h3",{id:"recorded-demo"},"Recorded Demo"),(0,o.kt)("p",null,"Using ",(0,o.kt)("a",{parentName:"p",href:"/website/komondor"},(0,o.kt)("inlineCode",{parentName:"a"},"komondor"))," can record all interactions to any external system.\nThat means you can create a record, and replay it in a live demo."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note that the browser side support is not yet available in 7.0.")),(0,o.kt)("h3",{id:"live-debug-recording"},"Live Debug Recording"),(0,o.kt)("p",null,"If your customer reports a problem,\nyou can get into a live debug session with your customer and turn on ",(0,o.kt)("a",{parentName:"p",href:"/website/komondor"},(0,o.kt)("inlineCode",{parentName:"a"},"komondor"))," recording.\nThen you can record the complete behavior and reproduce it later on."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note that the browser side support is not yet available in 7.0.")),(0,o.kt)("h2",{id:"architecture-consideration"},"Architecture Consideration"),(0,o.kt)("p",null,"To use ",(0,o.kt)("a",{parentName:"p",href:"/website/komondor"},(0,o.kt)("inlineCode",{parentName:"a"},"komondor"))," in production code,\nthere are some architecture best practice you can follow to make it easier."),(0,o.kt)("h3",{id:"clean-architecture"},"Clean Architecture"),(0,o.kt)("h4",{id:"dependency-injection"},"Dependency Injection"),(0,o.kt)("p",null,"Design your application with dependency injection in mind will make it very easy to use ",(0,o.kt)("a",{parentName:"p",href:"/website/komondor"},(0,o.kt)("inlineCode",{parentName:"a"},"komondor"))," in production."),(0,o.kt)("p",null,"All you need to do as passing in the spec'd instance of your dependency, and it will work as is.\nWhen the time is right, call ",(0,o.kt)("a",{parentName:"p",href:"/website/spec#done"},(0,o.kt)("inlineCode",{parentName:"a"},"spec.done()"))," to save the record."))}m.isMDXComponent=!0}}]);