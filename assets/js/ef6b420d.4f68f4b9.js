"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[745],{4852:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(9231);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6024:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(8041),a=(n(9231),n(4852));const o={},i="Special handling",c={unversionedId:"special-handling",id:"special-handling",title:"Special handling",description:"While we work out-of-the-box most of the time,",source:"@site/docs/special-handling.md",sourceDirName:".",slug:"/special-handling",permalink:"/website/special-handling",draft:!1,editUrl:"https://github.com/mocktomata/website/blob/main/docs/special-handling.md",tags:[],version:"current",frontMatter:{},sidebar:"mocktomata",previous:{title:"configuration",permalink:"/website/configuration"},next:{title:"plugin",permalink:"/website/plugin"}},s={},l=[{value:"<code>instanceof</code>",id:"instanceof",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"special-handling"},"Special handling"),(0,a.kt)("p",null,"While we work out-of-the-box most of the time,\nthere are scenarios that we need your help a little bit."),(0,a.kt)("p",null,"Here, we detail the specific cases you should be aware of,\nand how to handle them."),(0,a.kt)("h2",{id:"instanceof"},(0,a.kt)("inlineCode",{parentName:"h2"},"instanceof")),(0,a.kt)("p",null,"If your code or your test involves ",(0,a.kt)("inlineCode",{parentName:"p"},"instanceof")," check,\nyou will find that the test will fail during simulation."),(0,a.kt)("p",null,"This is because during simulation,\nthe instances and classes are restored from the spec record and we do not have access to the actual class."),(0,a.kt)("p",null,"This can be fixed by specing the class at the beginning:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"class Class {}\nclass SubClass extends Class {}\n\nfunction create() {\n  return new SubClass()\n}\n\nmockto('your test', (specName, spec) => {\n  it(specName, async () =>  {\n    await spec(SubClass) // <-- add this\n    const s = await spec(create)\n    const r = s()\n    expect(r).toBeInstanceOf(SubClass) // <-- and this will work\n    await spec.done()\n  })\n})\n")))}u.isMDXComponent=!0}}]);